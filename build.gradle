buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugin.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5"
    }
}

plugins {
    id 'java'
    id 'checkstyle'
    id "org.sonarqube" version "3.3"
    id "org.owasp.dependencycheck" version "6.2.2"
    id 'maven-publish'
}

group 'com.docu-tools'
version = '0.0.3'

sourceCompatibility = 16
targetCompatibility = 16

repositories {
    mavenCentral()
    maven {
        name = "DDSG"
        url("https://maven.pkg.github.com/DDS-GmbH/jlibvips")
        credentials {
            username = "github-actions"
            password = project.findProperty("GITHUB_TOKEN") ?: System.getenv("GITHUB_TOKEN")
        }
    }
    maven {
        name = "Poipath"
        url = uri("https://maven.pkg.github.com/DDS-Gmbh/poipath")
        credentials {
            username = "github-actions"
            password = project.findProperty("GITHUB_TOKEN") ?: System.getenv("GITHUB_TOKEN")
        }
    }
}

def apachePOIVersion = '5.0.0'

dependencies {
    implementation('commons-beanutils:commons-beanutils:1.9.4')

    implementation("org.apache.poi:poi:$apachePOIVersion")
    implementation("org.apache.poi:poi-ooxml:$apachePOIVersion")
    implementation("org.apache.poi:poi-ooxml-lite:$apachePOIVersion")

    implementation("com.google.code.gson:gson:2.8.7")
    implementation("org.apache.tika:tika-core:1.26")

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    runtimeOnly group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'

    implementation 'com.codepoetics:protonpack:1.16'
    implementation("com.google.guava:guava:30.1.1-jre")

    testImplementation('org.junit.jupiter:junit-jupiter:5.7.2')
    testImplementation("org.hamcrest:hamcrest:2.2")
    testImplementation("com.docu-tools:poipath:1.0.0")

    checkstyle 'com.puppycrawl.tools:checkstyle:8.43'
}

tasks.withType(Checkstyle) {
    ignoreFailures = false
    maxWarnings = 0 // Maximum number of warnings allowed
    reports {
        html.destination rootProject.file("build/reports/checkstyle.html")
    }
}

dependencyCheck {
    format = 'ALL'
    junitFailOnCVSS = 7.0
    failBuildOnCVSS = 9.0
    suppressionFile = 'config/dependency-check/suppression.xml'
}

java {
    withSourcesJar()
    withJavadocJar()
}
javadoc {
    failOnError = false
}

test {
    useJUnitPlatform()
}

task automatedTests(type: Test) {
    useJUnitPlatform{
        includeTags "automated"
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/DDS-GmbH/jocument")
            credentials {
                username = "codecitizen"
                password = project.findProperty("GITHUB_TOKEN") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.host.url", "https://sonarqube.docu-tools.com"
        property "sonar.login", "$System.env.SONARQUBE_TOKEN"
        property "sonar.verbose", "true"
        property "sonar.sources", "src/main/java/"
        property "sonar.language", "java"
        property "sonar.java.binaries", "."
    }
}
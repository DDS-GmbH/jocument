plugins {
    id 'java'
    id 'checkstyle'
    id "org.sonarqube" version "2.8"
    id "org.owasp.dependencycheck" version "5.3.2"
    id 'maven-publish'
}

group 'com.docutools'
version '1.0.0'

sourceCompatibility = 14
targetCompatibility = 14

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation('commons-beanutils:commons-beanutils:1.9.4')

    implementation("org.apache.poi:poi:4.1.2")
    implementation("org.apache.poi:poi-ooxml:4.1.2")
    implementation("org.apache.poi:poi-ooxml-schemas:4.1.2")

    implementation("com.google.code.gson:gson:2.8.6")
    implementation("org.apache.tika:tika-core:1.24.1")

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'
    runtimeOnly group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'

    implementation 'com.codepoetics:protonpack:1.16'
    implementation("com.google.guava:guava:29.0-jre")

    implementation("com.github.codecitizen:jlibvips:f9df6c8")

    testImplementation('org.junit.jupiter:junit-jupiter:5.6.0')
    testImplementation("org.hamcrest:hamcrest:2.2")

    checkstyle 'com.puppycrawl.tools:checkstyle:8.29'
}

tasks.withType(Checkstyle) {
    ignoreFailures = false
    maxWarnings = 0
}

dependencyCheck {
    format = 'ALL'
    junitFailOnCVSS = 7.0
    failBuildOnCVSS = 9.0
    suppressionFile = 'config/dependency-check/suppression.xml'
}

// Enable support for records, patterns and text blocks
compileJava {
    options.compilerArgs += ["--enable-preview"]
}
compileTestJava {
    options.compilerArgs += ["--enable-preview"]
}
test {
    jvmArgs '--enable-preview'
    useJUnitPlatform()
}

task automatedTests(type: Test) {
    jvmArgs '--enable-preview'
    useJUnitPlatform()
    include '**/*Test.class'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'jocument'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
    repositories {
        maven {
            url "s3://docu-tools-maven/${project.version.endsWith('-SNAPSHOT') ? 'snapshot' : 'release'}"
            credentials(AwsCredentials) {
                accessKey project.hasProperty('AWS_ACCESS_KEY') ? AWS_ACCESS_KEY : "${System.env.AWS_ACCESS_KEY}"
                secretKey project.hasProperty('AWS_SECRET_KEY') ? AWS_SECRET_KEY : "${System.env.AWS_SECRET_KEY}"
            }
        }
    }
}